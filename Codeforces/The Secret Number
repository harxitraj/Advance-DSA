
import java.util.*;
import java.math.BigInteger;

public class VadimNumberSolver {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt(); // number of test cases
        while (t-- > 0) {
            BigInteger n = sc.nextBigInteger();
            List<BigInteger> validX = new ArrayList<>();

            // Try k from 1 to 18 (since 10^18 is max)
            for (int k = 1; k <= 18; k++) {
                BigInteger tenPowK = BigInteger.TEN.pow(k);
                BigInteger divisor = BigInteger.ONE.add(tenPowK);

                if (n.mod(divisor).equals(BigInteger.ZERO)) {
                    BigInteger x = n.divide(divisor);
                    validX.add(x);
                }
            }

            if (validX.isEmpty()) {
                System.out.println(0);
            } else {
                Collections.sort(validX);
                System.out.print(validX.size());
                for (BigInteger x : validX) {
                    System.out.print(" " + x);
                }
                System.out.println();
            }
        }
        sc.close();
    }
}
