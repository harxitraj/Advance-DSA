class Solution {
    public int subarraysDivByK(int[] nums, int k) {
        HashMap<Integer, Integer> map = new HashMap<>();
        map.put(0,1);
        int prefixsum = 0;
        int count = 0;
        
        for(int i=0; i<nums.length; i++){
            prefixsum += nums[i];
            //for handling negative reminder also and keeping the range of reminder b/w 0-k
            int rem = ((prefixsum % k) + k )%k;
            if(map.containsKey(rem)){
                count += map.get(rem);
                map.put(rem, map.get(rem)+1);
            }else{
                map.put(rem, 1);
            }
        }
        
        return count;
    }
}
