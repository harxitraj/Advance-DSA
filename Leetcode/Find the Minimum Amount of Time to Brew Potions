class Solution {
    public long minTime(int[] skill, int[] mana) {
        int n = skill.length;
        int m = mana.length;
        long[] pref = new long[n];
        pref[0] = skill[0];
        for (int i = 1; i < n; i++) pref[i] = pref[i - 1] + skill[i];

        long[] s = new long[m];
        s[0] = 0L;

        for (int j = 1; j < m; j++) {
            long best = Long.MIN_VALUE;
            long mj = (long) mana[j];
            long mj1 = (long) mana[j - 1];

            for (int i = 0; i < n; i++) {
                long sumPrev = mj1 * pref[i];
                long sumCurrPrev = (i == 0) ? 0L : (mj * pref[i - 1]);
                long cand = s[j - 1] + sumPrev - sumCurrPrev;
                if (cand > best) best = cand;
            }
            s[j] = best;
        }

        long lastPotionTotal = pref[n - 1] * (long) mana[m - 1];
        return s[m - 1] + lastPotionTotal;
    }
}
