class Solution {
    public String findLexSmallestString(String s, int a, int b) {
        Set<String> visited = new HashSet<>();
        Queue<String> queue = new LinkedList<>();
        
        String smallest = s;
        queue.offer(s);
        visited.add(s);
        
        while (!queue.isEmpty()) {
            String curr = queue.poll();
            
            if (curr.compareTo(smallest) < 0) {
                smallest = curr;
            }
            
            char[] arr = curr.toCharArray();
            for (int i = 1; i < arr.length; i += 2) {
                int digit = (arr[i] - '0' + a) % 10;
                arr[i] = (char) ('0' + digit);
            }
            String addOp = new String(arr);
            if (!visited.contains(addOp)) {
                visited.add(addOp);
                queue.offer(addOp);
            }
            
            String rotateOp = curr.substring(curr.length() - b) + curr.substring(0, curr.length() - b);
            if (!visited.contains(rotateOp)) {
                visited.add(rotateOp);
                queue.offer(rotateOp);
            }
        }
        
        return smallest;
    }
}
