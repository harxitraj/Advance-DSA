class Solution {
    public int countValidSelections(int[] nums) {
        int n = nums.length;
        int count = 0;
        
        for (int i = 0; i < n; i++) {
            if (nums[i] == 0) {
                // Try both directions
                if (simulate(nums, i, 1)) count++;  // right
                if (simulate(nums, i, -1)) count++; // left
            }
        }
        return count;
    }
    
    private boolean simulate(int[] nums, int start, int dir) {
        int[] arr = Arrays.copyOf(nums, nums.length);
        int n = arr.length;
        int curr = start;
        
        while (curr >= 0 && curr < n) {
            if (arr[curr] == 0) {
                curr += dir;
            } else {
                arr[curr]--;
                dir = -dir; // reverse direction
                curr += dir;
            }
        }
        
        // check if all zeros
        for (int val : arr) {
            if (val != 0) return false;
        }
        return true;
    }
}
